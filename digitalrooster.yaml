openapi: "3.0.0"
info:
  description: Open API for Digital Rooster
  version: "0.1.0"
  title: DigitalRooster
  license:
    name: GPLv3

###############################################################################
components:
  # Objects #
  schemas:
    # Enum Schemas
    AlarmPeriodEnum: # Alarm enum
        type: string
        enum: &AlarmPeriod
          - once
          - weekend
          - workdays
          - daily
    # Station definition
    Station:
      required:
        - name
        - url
      properties:
        uid:
          type: string
        name:
          type: string
        url:
          type: string
    # Array of Stations
    Stations:
      type: array
      items:
        $ref: '#/components/schemas/Station'
    # PodcastSource definition
    Podcast:
      required:
        - name
        - url
      properties:
        uid:
          type: string
        name:
          type: string
        url:
          type: string
        updateInterval:
          type: integer  
    # Array of PodcastSources
    Podcasts:
      type: array
      items:
        $ref: '#/components/schemas/Podcasts'
    # Alarm definition
    Alarm:
      required:
        - time
        - period
        - url
        - enabled
      properties:
        time:
          type: string
        period:
          type: string
          enum: *AlarmPeriod
        url:
          type: string
        enabled:
          type: boolean
        volume:
          type: integer
        uid:
          type: string
    # Alarm array
    Alarms:
      type: array
      items:
        $ref: '#/components/schemas/Alarm'
# parameters for functions #########################################
  parameters:
    ArrayLength:
      name: length
      in: query
      description: max items returned
      required: false
      schema:
        type: integer
    ArrayOffset:
      name: offset
      in: query
      description: offset from start of list
      required: false
      schema:
        type: integer
    Uuid:
      name: uid
      in: path
      description: unique id to identify item
      required: true
      schema:
        type: string

###############################################################################
# Paths as API Endpoints
###############################################################################
paths:
# Internet Radio Streams
  /streams:
    get: # Get All Streams
      operationId: streams.read_all
      tags:
        - Internet Radio
      summary: Read all Internet radio streams
      description: returns a list of Internet radio streams
      parameters:
        - $ref: '#/components/parameters/ArrayLength'
        - $ref: '#/components/parameters/ArrayOffset'
      responses:
        200:
          description: Successfully read stream list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stations'
        404:
          description: Wrong length/offset        
                
    post: # Create a stream
      operationId: streams.create
      tags:
        - Internet Radio
      summary: Create a station info and add it to the list
      requestBody:
        description: Internet radio station to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Station'
      responses:
        200:
          description: Success! added new Internet radio station

# Manipulate single Internet Radio Stream
  /streams/{uid}:

    get: # read single stream by uid
      operationId: streams.read_one
      tags:
        - Internet Radio
      summary: Read one Internet radio station
      parameters:
       - $ref: '#/components/parameters/Uuid'
      responses:
        200:
          description: Successfully read a single radio station
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Station'
        404:
          description: Invalid UUID - no such Item
        default:
          description: something went wrong

    put: # Update single stream
      operationId: streams.update_one
      tags:
        - Internet Radio
      summary: Update Internet radio station information
      parameters:
      - $ref: '#/components/parameters/Uuid'
      requestBody:
        description: new content of internet radio station
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Station'
      responses:
        200:
          description: Successfully updated radio station
        404:
          description: Invalid UUID - no such Item
        default:
          description: something went wrong

    delete: # delete stream identified by uid
      operationId: streams.delete
      tags:
        - Internet Radio
      summary: Delete Internet radio station from list
      parameters:
        - $ref: '#/components/parameters/Uuid'
      responses:
        200:
          description: Successfully deleted radio station
        404:
          description: Invalid UUID - no such Item
        default:
          description: something went wrong

###############################################################################
# Podcast Sources
  /podcasts:
    get: # Get all podcasts
      operationId: podcasts.read_all
      tags:
        - Podcasts
      summary: Read all podcast rss sources
      parameters:
        - $ref: '#/components/parameters/ArrayLength'
        - $ref: '#/components/parameters/ArrayOffset'
      responses:
        200:
          description: successfully read list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Podcasts'
        404:
          description: Wrong length/offset

    post: # Add a podcast source with RSS feed
      operationId: podcasts.create
      tags:
        - Podcasts
      summary: Add a podcast source with RSS feed and add it to the list
      requestBody:
        description: Podcast source to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Podcast'
      responses:
        200:
          description: success

  /podcasts/{uid}:
    get: # read single podcast by uid
      operationId: podcasts.read_one
      tags:
        - Podcasts
      summary: Read one Podcast identified by UUID
      parameters:
       - $ref: '#/components/parameters/Uuid'
      responses:
        200:
          description: Successfully read Podcast
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Podcast'
        404:
          description: Invalid UUID - no such Item
        default:
          description: something went wrong

    put: # Update single podcast
      operationId: podcasts.update_one
      tags:
        - Podcasts
      summary: Update alarm
      parameters:
      - $ref: '#/components/parameters/Uuid'
      requestBody:
        description: new content of alarm
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Podcast'
      responses:
        200:
          description: Successfully updated podcast source
        404:
          description: Invalid UUID - no such Item
        default:
          description: something went wrong

    delete: # delete podcasts identified by uid
      operationId: podcasts.delete
      tags:
        - Podcasts
      summary: Delete Podcast from list
      parameters:
        - $ref: '#/components/parameters/Uuid'
      responses:
        200:
          description: Successfully deleted Podcast
        404:
          description: Invalid UUID - no such Item
        default:
          description: something went wrong          
          
################################################################################
# Alarms
  /alarms:
    get: # Get all Alarms
      operationId: alarms.read_all
      tags:
        - Alarms
      summary: Read all Alarms
      parameters:
        - $ref: '#/components/parameters/ArrayLength'
        - $ref: '#/components/parameters/ArrayOffset'
      responses:
        200:
          description: Successfully read alarm list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alarms'
        404:
          description: Wrong length/offset

    post: # Create new alarm
      operationId: alarms.create
      tags:
        - Alarms
      summary: Create a new alarm entry and add it to the list
      requestBody:
        description: Alarm object to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alarm'
      responses:
        200:
          description: Success

  /alarms/{uid}:
    get: # read single alarm by uid
      operationId: alarms.read_one
      tags:
        - Alarms
      summary: Read one Alarm
      parameters:
       - $ref: '#/components/parameters/Uuid'
      responses:
        200:
          description: Successfully read Alarm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alarm'
        404:
          description: Invalid UUID - no such Item
        default:
          description: something went wrong

    put: # Update single alarm
      operationId: alarms.update_one
      tags:
        - Alarms
      summary: Update alarm
      parameters:
      - $ref: '#/components/parameters/Uuid'
      requestBody:
        description: new content of alarm
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alarm'
      responses:
        200:
          description: Successfully updated Alarm
        404:
          description: Invalid UUID - no such Item
        default:
          description: something went wrong

    delete: # delete alarm identified by uid
      operationId: alarms.delete
      tags:
        - Alarms
      summary: Delete alarm from list
      parameters:
        - $ref: '#/components/parameters/Uuid'
      responses:
        200:
          description: Successfully deleted Alarm
        404:
          description: Invalid UUID - no such Item
        default:
          description: something went wrong
